name: Go Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go_version: ['1.17', '1.18']

    steps:

    - name: Set up Go version
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go_version }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-2

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Build
      run: go build -v ./...

    - name: Unit and Integration Tests
      run: go test -v -timeout 20m ./...

  check:
    name: Perform style and linter check
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go version
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - run: goimports -w .
      - run: go mod tidy
      # If there are any diffs from goimports or go mod tidy, fail.
      - name: Verify no changes from goimports and go mod tidy
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            exit 1
          fi
      - run: go vet ./...
      - uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1"
          install-go: false
